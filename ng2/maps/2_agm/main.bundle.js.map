{"version":3,"sources":["/home/kalinin/angular2/PRACTICE/map/src/$_lazy_route_resource lazy","/home/kalinin/angular2/PRACTICE/map/src/app/app.component.html","/home/kalinin/angular2/PRACTICE/map/src/app/app.component.scss","/home/kalinin/angular2/PRACTICE/map/src/app/app.component.ts","/home/kalinin/angular2/PRACTICE/map/src/app/app.module.ts","/home/kalinin/angular2/PRACTICE/map/src/environments/environment.ts","/home/kalinin/angular2/PRACTICE/map/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;ACVA,wBAAwB,SAAS,gR;;;;;;;ACAjC;AACA;;;AAGA;AACA,kCAAmC,kBAAkB,EAAE;;AAEvD;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;ACXkD;AAOlD;IALA;QAOE,UAAK,GAAW,sBAAsB,CAAC;QACvC,QAAG,GAAW,SAAS,CAAC;QACxB,QAAG,GAAW,QAAQ,CAAC;IAMzB,CAAC;IAJA,+BAAQ,GAAR;IAEA,CAAC;IARW,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAUxB;IAAD,mBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACC;AAGK;AAgB/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACf,gEAAa,CAAC,OAAO,CAAC;oBACpB,MAAM,EAAE,yCAAyC;iBAClD,CAAC;aACD;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;ACrBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kalinin/angular2/PRACTICE/map/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<h1>{{ title }}</h1>\\n\\n<!-- this creates a google map on the page with the given lat/lng from -->\\n<!-- the component as the initial center of the map: -->\\n<agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\">\\n  <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\n</agm-map>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kalinin/angular2/PRACTICE/map/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"agm-map {\\n  height: 300px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kalinin/angular2/PRACTICE/map/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  title: string = 'My first AGM project';\n  lat: number = 51.678418;\n  lng: number = 7.809007;\t\t\n\n\tngOnInit() {\n\n\t}\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kalinin/angular2/PRACTICE/map/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AgmCoreModule } from '@agm/core';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\t\tAgmCoreModule.forRoot({\n\t\t  apiKey: 'AIzaSyCd0JCVp3-dlMUjdfsJuAJYQ0AoCilDgSQ'\n\t\t})    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/kalinin/angular2/PRACTICE/map/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/kalinin/angular2/PRACTICE/map/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/kalinin/angular2/PRACTICE/map/src/main.ts"],"sourceRoot":"webpack:///"}